{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/podcastr-app/src/pages/episodes/[slug].tsx\";\nimport styles from '../episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episodeContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/vitormrts/√Årea de Trabalho/Projects/podcastr-app/src/pages/episodes/[slug].tsx"],"names":["styles","Episode","episode","episodeContainer","thumbnailContainer"],"mappings":";;AAOA,OAAOA,MAAP,MAAmB,wBAAnB;;AAkBA,eAAe,SAASC,OAAT,OAA6C;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AACxD,sBACI;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,gBAAvB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACI,kBAAvB;AAAA,6BACI;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,EAAT;AAAY,UAAA,GAAG,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;KAVuBH,O","sourcesContent":["import { parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport { format } from 'date-fns'\nimport { api } from '../../services/api'\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString'\n\nimport styles from '../episode.module.scss'\n\ntype Episode = {\n    id: string,\n    title:string,\n    thumbnail: string,\n    members: string,\n    publishedAt: string,\n    duration: number,\n    durationAsString: string,\n    description: string\n    url: string\n}\n  \ntype EpisodeProps = {\n    episode: Episode\n}\n\nexport default function Episode({ episode }: EpisodeProps ) {\n    return (\n        <div className={styles.episodeContainer}>\n            <div className={styles.thumbnailContainer}>\n                <button>\n                    <img src=\"\" alt=\"\"/>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n        paths: [],\n        fallback: 'blocking',\n    }\n}\n\nexport const getStaticProps: GetStaticProps = async(ctx) => {\n    const { slug } = ctx.params // pega o nome do episodio\n    const { data } = await api.get(`/episodes/${slug}`)\n\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url\n      }\n\n    return {\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24, // 24 hrs\n    }\n}"]},"metadata":{},"sourceType":"module"}