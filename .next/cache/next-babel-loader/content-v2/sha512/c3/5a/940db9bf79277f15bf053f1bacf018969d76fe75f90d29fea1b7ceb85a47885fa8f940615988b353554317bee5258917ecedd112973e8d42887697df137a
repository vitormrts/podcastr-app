{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vitormrts/\\xC1rea de Trabalho/Projects/podcastr-app/src/pages/episodes/[slug].tsx\";\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nexport default function Episode() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params; // pega o nome do episodio\n\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidate: 60 * 60 * 24 // 24 hrs\n\n  };\n};","map":{"version":3,"sources":["/home/vitormrts/√Årea de Trabalho/Projects/podcastr-app/src/pages/episodes/[slug].tsx"],"names":["useRouter","api","Episode","router","query","slug","getStaticProps","ctx","params","data","get","episode","id","title","thumbnail","members","publishedAt","format","parseISO","published_at","locale","ptBR","duration","Number","file","durationAsString","convertDurationToTimeString","description","url","props","revalidate"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,sBACI;AAAA,cAAKG,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAMC,GAAN,IAAc;AACxD,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB,CADwD,CAC5B;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,GAAG,CAACS,GAAJ,CAAS,aAAYL,IAAK,EAA1B,CAAvB;AAEA,QAAMM,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAEH,IAAI,CAACG,EADG;AAEZC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFA;AAGZC,IAAAA,SAAS,EAAEL,IAAI,CAACK,SAHJ;AAIZC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAJF;AAKZC,IAAAA,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACT,IAAI,CAACU,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAEC;AAAV,KAA1C,CALP;AAMZC,IAAAA,QAAQ,EAAEC,MAAM,CAACd,IAAI,CAACe,IAAL,CAAUF,QAAX,CANJ;AAOZG,IAAAA,gBAAgB,EAAEC,2BAA2B,CAACH,MAAM,CAACd,IAAI,CAACe,IAAL,CAAUF,QAAX,CAAP,CAPjC;AAQZK,IAAAA,WAAW,EAAElB,IAAI,CAACkB,WARN;AASZC,IAAAA,GAAG,EAAEnB,IAAI,CAACe,IAAL,CAAUI;AATH,GAAhB;AAYA,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFnB,CAEuB;;AAFvB,GAAP;AAIH,CApBM","sourcesContent":["import { GetStaticProps } from 'next'\nimport { useRouter } from 'next/router'\nimport { api } from '../../services/api'\n\nexport default function Episode() {\n    const router = useRouter()\n    return (\n        <h1>{router.query.slug}</h1>\n    )\n}\n\nexport const getStaticProps: GetStaticProps = async(ctx) => {\n    const { slug } = ctx.params // pega o nome do episodio\n    const { data } = await api.get(`/episodes/${slug}`)\n\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url\n      }\n\n    return {\n        props: {},\n        revalidate: 60 * 60 * 24, // 24 hrs\n    }\n}"]},"metadata":{},"sourceType":"module"}